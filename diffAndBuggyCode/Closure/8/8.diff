diff --git a/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java b/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java
index 47c2c4fe..e0466eac 100644
--- a/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java
+++ b/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java
@@ -199,11 +199,17 @@ class CollapseVariableDeclarations implements CompilerPass {
       }
 
       Var var = s.getVar(lhs.getString());
-      return var != null &&
-          var.getScope() == s && !blacklistedVars.contains(var);
+      return var != null
+          && var.getScope() == s
+          && !isNamedParameter(var)
+          && !blacklistedVars.contains(var);
     }
   }
 
+  private boolean isNamedParameter(Var v) {
+    return v.getParentNode().isParamList();
+  }
+
   private void applyCollapses() {
     for (Collapse collapse : collapses) {
 
diff --git a/test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java b/test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java
index eb48e708..5e318e10 100644
--- a/test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java
+++ b/test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java
@@ -42,6 +42,12 @@ public class CollapseVariableDeclarationsTest extends CompilerTestCase {
          "var a=1,b=2,c=3,d=4;");
   }
 
+  public void testIssue820() throws Exception {
+    // Don't redeclare function parameters, this is incompatible with
+    // strict mode.
+    testSame("function f(a){ var b=1; a=2; var c; }");
+  }
+
   public void testIfElseVarDeclarations() throws Exception {
     testSame("if (x) var a = 1; else var b = 2;");
   }
