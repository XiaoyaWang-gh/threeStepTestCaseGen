diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java
index c916cf84..936af02e 100644
--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java
+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java
@@ -74,6 +74,7 @@ import com.google.javascript.rhino.head.ast.WithStatement;
 import com.google.javascript.rhino.jstype.StaticSourceFile;
 
 import java.util.Set;
+import java.util.regex.Pattern;
 
 /**
  * IRFactory transforms the new AST to the old AST.
@@ -248,9 +249,8 @@ class IRFactory {
    * Check to see if the given block comment looks like it should be JSDoc.
    */
   private void handleBlockComment(Comment comment) {
-    String value = comment.getValue();
-    if (value.indexOf("/* @") != -1 ||
-        value.indexOf("\n * @") != -1) {
+    Pattern p = Pattern.compile("(/|(\n[ \t]*))\\*[ \t]*@[a-zA-Z]");
+    if (p.matcher(comment.getValue()).find()) {
       errorReporter.warning(
           SUSPICIOUS_COMMENT_WARNING,
           sourceName,
diff --git a/test/com/google/javascript/jscomp/parsing/ParserTest.java b/test/com/google/javascript/jscomp/parsing/ParserTest.java
index 1298aa44..b09bc342 100644
--- a/test/com/google/javascript/jscomp/parsing/ParserTest.java
+++ b/test/com/google/javascript/jscomp/parsing/ParserTest.java
@@ -691,6 +691,33 @@ public class ParserTest extends BaseJSTypeTestCase {
     parse("/* \n * @type {number} */ var x = 3;", SUSPICIOUS_COMMENT_WARNING);
   }
 
+  public void testSuspiciousBlockCommentWarning3() {
+    parse("/* \n *@type {number} */ var x = 3;", SUSPICIOUS_COMMENT_WARNING);
+  }
+
+  public void testSuspiciousBlockCommentWarning4() {
+    parse(
+        "  /*\n" +
+        "   * @type {number}\n" +
+        "   */\n" +
+        "  var x = 3;",
+        SUSPICIOUS_COMMENT_WARNING);
+  }
+
+  public void testSuspiciousBlockCommentWarning5() {
+    parse(
+        "  /*\n" +
+        "   * some random text here\n" +
+        "   * @type {number}\n" +
+        "   */\n" +
+        "  var x = 3;",
+        SUSPICIOUS_COMMENT_WARNING);
+  }
+
+  public void testSuspiciousBlockCommentWarning6() {
+    parse("/* @type{number} */ var x = 3;", SUSPICIOUS_COMMENT_WARNING);
+  }
+
   public void testCatchClauseForbidden() {
     parseError("try { } catch (e if true) {}",
         "Catch clauses are not supported");
