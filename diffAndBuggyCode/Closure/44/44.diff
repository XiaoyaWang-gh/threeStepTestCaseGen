diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java
index 3a667500..8023324c 100644
--- a/src/com/google/javascript/jscomp/CodeConsumer.java
+++ b/src/com/google/javascript/jscomp/CodeConsumer.java
@@ -191,6 +191,13 @@ abstract class CodeConsumer {
       // need space to separate. This is not pretty printing.
       // For example: "return foo;"
       append(" ");
+    } else if (c == '/' && getLastChar() == '/') {
+      // Do not allow a forward slash to appear after a DIV.
+      // For example,
+      // REGEXP DIV REGEXP
+      // is valid and should print like
+      // / // / /
+      append(" ");
     }
 
     append(newcode);
diff --git a/test/com/google/javascript/jscomp/CodePrinterTest.java b/test/com/google/javascript/jscomp/CodePrinterTest.java
index 3b79d8d9..4dc2aabc 100644
--- a/test/com/google/javascript/jscomp/CodePrinterTest.java
+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java
@@ -1279,6 +1279,11 @@ public class CodePrinterTest extends TestCase {
     assertPrint("'\\x0B' == '\\v'", "\"\\x0B\"==\"\\v\"");
   }
 
+  public void testIssue620() {
+    assertPrint("alert(/ / / / /);", "alert(/ // / /)");
+    assertPrint("alert(/ // / /);", "alert(/ // / /)");
+  }
+
   public void testIssue5746867() {
     assertPrint("var a = { '$\\\\' : 5 };", "var a={\"$\\\\\":5}");
   }
