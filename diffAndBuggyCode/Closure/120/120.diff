diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
index cdacc5f7..0af61d0c 100644
--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
@@ -428,6 +428,9 @@ class ReferenceCollectingCallback implements ScopedCallback,
       for (BasicBlock block = ref.getBasicBlock();
            block != null; block = block.getParent()) {
         if (block.isFunction) {
+          if (ref.getSymbol().getScope() != ref.scope) {
+            return false;
+          }
           break;
         } else if (block.isLoop) {
           return false;
diff --git a/test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java b/test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java
index 3810384e..be1cead1 100644
--- a/test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java
+++ b/test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java
@@ -49,9 +49,6 @@ public class InlineVariablesConstantsTest extends CompilerTestCase {
     test("var AA; if (false) AA=1; AA;", "if (false) 1; 1;");
     testSame("var AA; if (false) AA=1; else AA=2; AA;");
 
-    test("var AA;(function () {AA=1})()",
-         "(function () {1})()");
-
     // Make sure that nothing explodes if there are undeclared variables.
     testSame("var x = AA;");
 
@@ -75,9 +72,6 @@ public class InlineVariablesConstantsTest extends CompilerTestCase {
     test("/** @const */var a_a=10; a_a + a_a;", "10+10");
     test("/** @const */var aa=1;", "");
     test("/** @const */var aa; aa=1;", "1");
-    test("/** @const */var aa;(function () {aa=1})()", "(function () {1})()");
-    test("/** @const */var aa;(function () {aa=1})(); var z=aa",
-         "(function () {1})(); var z=1");
     testSame("/** @const */var aa;(function () {var y; aa=y})(); var z=aa");
 
     // Don't inline if it will make the output larger.
diff --git a/test/com/google/javascript/jscomp/InlineVariablesTest.java b/test/com/google/javascript/jscomp/InlineVariablesTest.java
index 23f9fee5..d1c0ed71 100644
--- a/test/com/google/javascript/jscomp/InlineVariablesTest.java
+++ b/test/com/google/javascript/jscomp/InlineVariablesTest.java
@@ -1064,4 +1064,9 @@ public class InlineVariablesTest extends CompilerTestCase {
         "F.prototype.inc = function() { this.a++; return 10; };" +
         "F.prototype.bar = function() { var x = this.inc(); this.a += x; };");
   }
+
+  public void testExternalIssue1053() {
+    testSame(
+        "var u; function f() { u = Random(); var x = u; f(); alert(x===u)}");
+  }
 }
