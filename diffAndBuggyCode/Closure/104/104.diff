diff --git a/externs/html5.js b/externs/html5.js
index 54768013..3783c312 100644
--- a/externs/html5.js
+++ b/externs/html5.js
@@ -351,7 +351,7 @@ CanvasRenderingContext2D.prototype.font;
 CanvasRenderingContext2D.prototype.globalAlpha;
 
 /** @type {string} */
-CanvasRenderingContext2D.prototype.globalCompositingOperation;
+CanvasRenderingContext2D.prototype.globalCompositeOperation;
 
 /** @type {number} */
 CanvasRenderingContext2D.prototype.lineWidth;
@@ -363,7 +363,7 @@ CanvasRenderingContext2D.prototype.lineCap;
 CanvasRenderingContext2D.prototype.lineJoin;
 
 /** @type {number} */
-CanvasRenderingContext2D.prototype.mitreLimit;
+CanvasRenderingContext2D.prototype.miterLimit;
 
 /** @type {number} */
 CanvasRenderingContext2D.prototype.shadowBlur;
diff --git a/src/com/google/javascript/rhino/jstype/UnionType.java b/src/com/google/javascript/rhino/jstype/UnionType.java
index c200b648..6f0d798e 100644
--- a/src/com/google/javascript/rhino/jstype/UnionType.java
+++ b/src/com/google/javascript/rhino/jstype/UnionType.java
@@ -43,7 +43,6 @@ import static com.google.javascript.rhino.jstype.TernaryValue.UNKNOWN;
 
 import com.google.common.collect.ImmutableSet;
 import com.google.javascript.rhino.ErrorReporter;
-import com.google.javascript.rhino.jstype.JSType.TypePair;
 
 import java.util.Set;
 import java.util.SortedSet;
@@ -289,7 +288,7 @@ public class UnionType extends JSType {
       builder.addAlternate(that);
     }
     JSType result = builder.build();
-    if (result != null) {
+    if (!result.isNoType()) {
       return result;
     } else if (this.isObject() && that.isObject()) {
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
diff --git a/test/com/google/javascript/rhino/jstype/UnionTypeTest.java b/test/com/google/javascript/rhino/jstype/UnionTypeTest.java
index 2dc4818f..bec05500 100644
--- a/test/com/google/javascript/rhino/jstype/UnionTypeTest.java
+++ b/test/com/google/javascript/rhino/jstype/UnionTypeTest.java
@@ -145,10 +145,19 @@ public class UnionTypeTest extends BaseJSTypeTestCase {
    * Tests {@link JSType#getGreatestSubtype(JSType)} on union types.
    */
   public void testGreatestSubtypeUnionTypes4() throws Exception {
-    UnionType numStr = (UnionType) createUnionType(
+    UnionType errUnion = (UnionType) createUnionType(
         NULL_TYPE, EVAL_ERROR_TYPE, URI_ERROR_TYPE);
     assertEquals(createUnionType(EVAL_ERROR_TYPE, URI_ERROR_TYPE),
-        numStr.getGreatestSubtype(ERROR_TYPE));
+        errUnion.getGreatestSubtype(ERROR_TYPE));
+  }
+
+  /**
+   * Tests {@link JSType#getGreatestSubtype(JSType)} on union types.
+   */
+  public void testGreatestSubtypeUnionTypes5() throws Exception {
+    JSType errUnion = createUnionType(EVAL_ERROR_TYPE, URI_ERROR_TYPE);
+    assertEquals(NO_OBJECT_TYPE,
+        errUnion.getGreatestSubtype(STRING_OBJECT_TYPE));
   }
 
   /**
