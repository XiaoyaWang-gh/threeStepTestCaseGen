diff --git a/src/com/google/debugging/sourcemap/FilePosition.java b/src/com/google/debugging/sourcemap/FilePosition.java
index cc7243bb..f84320a0 100644
--- a/src/com/google/debugging/sourcemap/FilePosition.java
+++ b/src/com/google/debugging/sourcemap/FilePosition.java
@@ -20,9 +20,6 @@ package com.google.debugging.sourcemap;
  * Represents a position in a source file.
  *
  */
-/**
- * Represents a position in a source file.
- */
 public class FilePosition {
   private final int line;
   private final int column;
@@ -33,15 +30,18 @@ public class FilePosition {
   }
 
   /**
-   * Returns the line number of this postion.
+   * Returns the line number of this position.
+   * Note: The v1 and v2 source maps use a line number with the first line
+   * being 1, whereas the v3 source map corrects this and uses a first line
+   * number of 0 to be consistent with the column representation.
    */
   public int getLine() {
     return line;
   }
 
   /**
-   * Returns the character index on the line
-   * of this position.
+   * @return the character index on the line
+   * of this position, with the first column being 0.
    */
   public int getColumn() {
     return column;
diff --git a/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java b/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java
index 3b07ae45..5ee9108c 100644
--- a/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java
+++ b/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java
@@ -483,10 +483,11 @@ public class SourceMapConsumerV3 implements SourceMapConsumer,
     if (entry.getSourceFileId() == UNMAPPED) {
       return null;
     } else {
+      // Adjust the line/column here to be start at 1.
       Builder x = OriginalMapping.newBuilder()
         .setOriginalFile(sources[entry.getSourceFileId()])
-        .setLineNumber(entry.getSourceLine())
-        .setColumnPosition(entry.getSourceColumn());
+        .setLineNumber(entry.getSourceLine() + 1)
+        .setColumnPosition(entry.getSourceColumn() + 1);
       if (entry.getNameId() != UNMAPPED) {
         x.setIdentifier(names[entry.getNameId()]);
       }
diff --git a/src/com/google/javascript/jscomp/SourceMap.java b/src/com/google/javascript/jscomp/SourceMap.java
index 04ff6233..71924081 100644
--- a/src/com/google/javascript/jscomp/SourceMap.java
+++ b/src/com/google/javascript/jscomp/SourceMap.java
@@ -22,6 +22,8 @@ import com.google.debugging.sourcemap.FilePosition;
 import com.google.debugging.sourcemap.SourceMapFormat;
 import com.google.debugging.sourcemap.SourceMapGenerator;
 import com.google.debugging.sourcemap.SourceMapGeneratorFactory;
+import com.google.debugging.sourcemap.SourceMapGeneratorV1;
+import com.google.debugging.sourcemap.SourceMapGeneratorV2;
 import com.google.javascript.rhino.Node;
 
 import java.io.IOException;
@@ -129,9 +131,19 @@ public class SourceMap {
 
     String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);
 
+    // Strangely, Rhino source lines are one based but columns are
+    // zero based.
+    // We don't change this for the v1 or v2 source maps but for
+    // v3 we make them both 0 based.
+    int lineBaseOffset = 1;
+    if (generator instanceof SourceMapGeneratorV1
+        || generator instanceof SourceMapGeneratorV2) {
+      lineBaseOffset = 0;
+    }
+
     generator.addMapping(
         sourceFile, originalName,
-        new FilePosition(node.getLineno(), node.getCharno()),
+        new FilePosition(node.getLineno() - lineBaseOffset, node.getCharno()),
         outputStartPosition, outputEndPosition);
   }
 
diff --git a/test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java b/test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java
index b3b23994..1d3c3a33 100644
--- a/test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java
+++ b/test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java
@@ -25,6 +25,10 @@ import com.google.javascript.jscomp.SourceMap.Format;
  */
 public class SourceMapGeneratorV1Test extends SourceMapTestCase {
 
+  public SourceMapGeneratorV1Test() {
+    disableColumnValidation();
+  }
+
   @Override
   protected SourceMapConsumer getSourceMapConsumer() {
     return new SourceMapConsumerV1();
diff --git a/test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java b/test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java
index 370467ce..0932b54e 100644
--- a/test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java
+++ b/test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java
@@ -28,6 +28,10 @@ import java.io.IOException;
  */
 public class SourceMapGeneratorV2Test extends SourceMapTestCase {
 
+  public SourceMapGeneratorV2Test() {
+    disableColumnValidation();
+  }
+
   @Override
   protected SourceMapConsumer getSourceMapConsumer() {
     return new SourceMapConsumerV2();
diff --git a/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java b/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java
index 1d008f6f..6e2f45e2 100644
--- a/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java
+++ b/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java
@@ -32,6 +32,9 @@ import java.util.List;
  */
 public class SourceMapGeneratorV3Test extends SourceMapTestCase {
 
+  public SourceMapGeneratorV3Test() {
+  }
+
   @Override
   protected SourceMapConsumer getSourceMapConsumer() {
     return new SourceMapConsumerV3();
@@ -54,7 +57,7 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
                    "\"version\":3,\n" +
                    "\"file\":\"testcode\",\n" +
                    "\"lineCount\":1,\n" +
-                   "\"mappings\":\"AACAA,QAASA,UAAS,EAAG;\",\n" +
+                   "\"mappings\":\"AAAAA,QAASA,UAAS,EAAG;\",\n" +
                    "\"sources\":[\"testcode\"],\n" +
                    "\"names\":[\"__BASIC__\"]\n" +
                    "}\n");
@@ -78,7 +81,7 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
                    "\"version\":3,\n" +
                    "\"file\":\"testcode\",\n" +
                    "\"lineCount\":1,\n" +
-                   "\"mappings\":\"AACAA,QAASA,UAAS,CAACC,UAAD,CAAaC,UAAb," +
+                   "\"mappings\":\"AAAAA,QAASA,UAAS,CAACC,UAAD,CAAaC,UAAb," +
                        "CAAyB,CAAE,IAAIC,QAAU,SAAhB;\",\n" +
                    "\"sources\":[\"testcode\"],\n" +
                    "\"names\":[\"__BASIC__\",\"__PARAM1__\",\"__PARAM2__\"," +
@@ -126,6 +129,20 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
                    "}\n");
   }
 
+  public void testGoldenOutput0a() throws Exception {
+    // Empty source map test
+    checkSourceMap("a;",
+
+                   "{\n" +
+                   "\"version\":3,\n" +
+                   "\"file\":\"testcode\",\n" +
+                   "\"lineCount\":1,\n" +
+                   "\"mappings\":\"AAAAA;\",\n" +
+                   "\"sources\":[\"testcode\"],\n" +
+                   "\"names\":[\"a\"]\n" +
+                   "}\n");
+  }
+
   public void testGoldenOutput1() throws Exception {
     detailLevel = SourceMap.DetailLevel.ALL;
 
@@ -135,7 +152,7 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
                    "\"version\":3,\n" +
                    "\"file\":\"testcode\",\n" +
                    "\"lineCount\":1,\n" +
-                   "\"mappings\":\"AACAA,QAASA,EAAC,CAACC,GAAD,CAAMC,GAAN," +
+                   "\"mappings\":\"AAAAA,QAASA,EAAC,CAACC,GAAD,CAAMC,GAAN," +
                        "CAAW,CAAED,GAAA,CAAMA,GAAN,CAAYC,GAAZ,CAAkB,CAAG," +
                        "OAAOD,IAA9B;\",\n" +
                    "\"sources\":[\"testcode\"],\n" +
@@ -150,7 +167,7 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
                    "\"version\":3,\n" +
                    "\"file\":\"testcode\",\n" +
                    "\"lineCount\":1,\n" +
-                   "\"mappings\":\"AACAA,QAASA,EAATA,CAAWC,GAAXD,CAAgBE," +
+                   "\"mappings\":\"AAAAA,QAASA,EAATA,CAAWC,GAAXD,CAAgBE," +
                        "GAAhBF,EAAuBC,GAAvBD,CAA6BC,GAA7BD,CAAmCE,GAAnCF," +
                        "SAAmDC,IAAnDD;\",\n" +
                    "\"sources\":[\"testcode\"],\n" +
@@ -166,7 +183,7 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
                    "\"version\":3,\n" +
                    "\"file\":\"testcode\",\n" +
                    "\"lineCount\":1,\n" +
-                   "\"mappings\":\"AACAA,QAASA,EAAC,CAACC,GAAD,CAAMC,GAAN," +
+                   "\"mappings\":\"AAAAA,QAASA,EAAC,CAACC,GAAD,CAAMC,GAAN," +
                        "CAAW,CAIrBD,GAAA,CAAMA,GAAN,CAAYC,GAAZ,CAAkBD," +
                        "GAClB,OAAOA,IALc;\",\n" +
                    "\"sources\":[\"testcode\"],\n" +
@@ -182,7 +199,7 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
                    "\"version\":3,\n" +
                    "\"file\":\"testcode\",\n" +
                    "\"lineCount\":1,\n" +
-                   "\"mappings\":\"AACAA;\",\n" +
+                   "\"mappings\":\"AAAAA;\",\n" +
                    "\"sources\":[\"c:\\\\myfile.js\"],\n" +
                    "\"names\":[\"foo\"]\n" +
                    "}\n");
@@ -196,7 +213,7 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
                    "\"version\":3,\n" +
                    "\"file\":\"testcode\",\n" +
                    "\"lineCount\":1,\n" +
-                   "\"mappings\":\"AACAA,GAAOC,IAAOC;\",\n" +
+                   "\"mappings\":\"AAAAA,GAAOC,IAAOC;\",\n" +
                    "\"sources\":[\"c:\\\\myfile.js\"],\n" +
                    "\"names\":[\"foo\",\"boo\",\"goo\"]\n" +
                    "}\n");
@@ -242,7 +259,7 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
         "\"version\":3,\n" +
         "\"file\":\"testcode\",\n" +
         "\"lineCount\":6,\n" +
-        "\"mappings\":\"A;;;;AAIA,IAAIA,IAAIC,CAAJD,CAAQ,mxCAARA;AAA8xCE," +
+        "\"mappings\":\"A;;;;AAGA,IAAIA,IAAIC,CAAJD,CAAQ,mxCAARA;AAA8xCE," +
             "CAA9xCF,CAAkyCG,CAAlyCH,CAAsyCI;\",\n" +
         "\"sources\":[\"c:\\\\myfile.js\"],\n" +
         "\"names\":[\"foo\",\"a\",\"c\",\"d\",\"e\"]\n" +
@@ -286,7 +303,7 @@ public class SourceMapGeneratorV3Test extends SourceMapTestCase {
         "\"version\":3,\n" +
         "\"file\":\"testcode\",\n" +
         "\"lineCount\":6,\n" +
-        "\"mappings\":\"A;;;;IAIIA,IAAIC,CAAJD;AAA8xCE,CAA9xCF,CAAkyCG," +
+        "\"mappings\":\"A;;;;IAGIA,IAAIC,CAAJD;AAA8xCE,CAA9xCF,CAAkyCG," +
             "CAAlyCH,CAAsyCI;\",\n" +
         "\"sources\":[\"c:\\\\myfile.js\"],\n" +
         "\"names\":[\"foo\",\"a\",\"c\",\"d\",\"e\"]\n" +
diff --git a/test/com/google/debugging/sourcemap/SourceMapTestCase.java b/test/com/google/debugging/sourcemap/SourceMapTestCase.java
index 802fef59..694f93f4 100644
--- a/test/com/google/debugging/sourcemap/SourceMapTestCase.java
+++ b/test/com/google/debugging/sourcemap/SourceMapTestCase.java
@@ -37,7 +37,15 @@ import java.util.Map.Entry;
  */
 public abstract class SourceMapTestCase extends TestCase {
 
-  public SourceMapTestCase() {}
+  private boolean validateColumns = true;
+
+  public SourceMapTestCase() {
+  }
+
+  void disableColumnValidation() {
+    validateColumns = false;
+  }
+
 
   static final JSSourceFile[] EXTERNS = {
       JSSourceFile.fromCode("externs", "")
@@ -234,6 +242,16 @@ public abstract class SourceMapTestCase extends TestCase {
       assertEquals(mapping.getLineNumber(),
                    inputToken.position.getLine() + 1);
 
+      int start = inputToken.position.getColumn() + 1;
+      if (inputToken.tokenName.startsWith("STR")) {
+        // include the preceding quote.
+        start--;
+      }
+
+      if (validateColumns) {
+        assertEquals(start, mapping.getColumnPosition());
+      }
+
       // Ensure that if the token name does not being with an 'STR' (meaning a
       // string) it has an original name.
       if (!inputToken.tokenName.startsWith("STR")) {
diff --git a/test/com/google/javascript/jscomp/SourceMapTest.java b/test/com/google/javascript/jscomp/SourceMapTest.java
index 10fcfd12..84f4492d 100644
--- a/test/com/google/javascript/jscomp/SourceMapTest.java
+++ b/test/com/google/javascript/jscomp/SourceMapTest.java
@@ -31,6 +31,9 @@ import java.util.List;
  */
 public class SourceMapTest extends SourceMapTestCase {
 
+  public SourceMapTest() {
+  }
+
   private List<SourceMap.LocationMapping> mappings;
 
   public void testPrefixReplacement1() throws IOException {
