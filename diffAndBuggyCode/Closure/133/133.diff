diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index bf460570..ce945739 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1364,7 +1364,7 @@ public final class JsDocInfoParser {
     int lineno = stream.getLineno();
     int charno = stream.getCharno() + 1;
 
-    String line = stream.getRemainingJSDocLine().trim();
+    String line = getRemainingJSDocLine().trim();
 
     // Record the textual description.
     if (line.length() > 0) {
@@ -1420,7 +1420,7 @@ public final class JsDocInfoParser {
     int startCharno = stream.getCharno() + 1;
 
     // Read the content from the first line.
-    String line = stream.getRemainingJSDocLine();
+    String line = getRemainingJSDocLine();
     if (option != WhitespaceOption.PRESERVE) {
       line = line.trim();
     }
@@ -1509,7 +1509,7 @@ public final class JsDocInfoParser {
 
           builder.append(toString(token));
 
-          line = stream.getRemainingJSDocLine();
+          line = getRemainingJSDocLine();
 
           if (option != WhitespaceOption.PRESERVE) {
             line = trimEnd(line);
@@ -1572,7 +1572,7 @@ public final class JsDocInfoParser {
 
           builder.append(toString(token));
 
-          String line = stream.getRemainingJSDocLine();
+          String line = getRemainingJSDocLine();
           line = trimEnd(line);
           builder.append(line);
           token = next();
@@ -2393,6 +2393,15 @@ public final class JsDocInfoParser {
     }
   }
 
+  /**
+   * Returns the remainder of the line.
+   */
+  private String getRemainingJSDocLine() {
+    String result = stream.getRemainingJSDocLine();
+    unreadToken = NO_UNREAD_TOKEN;
+    return result;
+  }
+
   /**
    * Determines whether the parser has been populated with docinfo with a
    * fileoverview tag.
diff --git a/test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java b/test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java
index 59c1ef7a..279aff25 100644
--- a/test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java
+++ b/test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java
@@ -2752,6 +2752,11 @@ public class JsDocInfoParserTest extends BaseJSTypeTestCase {
     parse("@ngInject \n@ngInject*/", "extra @ngInject tag");
   }
 
+  public void testTextExtents() {
+    parse("@return {@code foo} bar \n *    baz. */",
+        true, "Bad type annotation. type not recognized due to syntax error");
+  }
+
   /**
    * Asserts that a documentation field exists on the given marker.
    *
